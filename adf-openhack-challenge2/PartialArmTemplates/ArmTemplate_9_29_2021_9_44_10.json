{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-openhack-challenge2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SQL Orders to CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Take 3NF SQL Azure DB schema for Orders and migrate to a denormalized schema in a new CosmosDB container",
				"activities": [
					{
						"name": "denormOrders2_Challenge3",
						"description": "Uses Data Flow R2H features",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "denormOrders2_Challenge3",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-09-28T10:08:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Order_OrderDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Order Details data to blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [value]\nFROM OPENJSON(\n    (SELECT\n        o.OrderId AS id\n        ,o.OrderDate\n        ,o.FirstName\n        ,o.LastName\n        ,o.Address\n        ,o.City\n        ,o.State\n        ,o.PostalCode\n        ,o.Country\n        ,o.Phone\n        ,o.SMSOptIn\n        ,o.Email\n        ,o.Total\n        ,o.PaymentTransactionId\n        ,o.HasBeenShipped\n        ,(  SELECT \n                OrderDetailId\n                ,od.ProductId\n                ,od.Quantity\n                ,od.UnitPrice\n                ,od.Email\n            FROM\n                OrderDetails od\n            WHERE od.OrderId = o.OrderId FOR JSON AUTO) OrderDetails\n    FROM \n        Orders o\nFOR JSON PATH ))",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlOpenQueryDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JsonBlobFile",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy Json To CosmosDb",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Order Details data to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Order_OrderDetails_JsonBlob",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDb_Orders",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlOpenQueryDataset')]",
				"[concat(variables('factoryId'), '/datasets/JsonBlobFile')]",
				"[concat(variables('factoryId'), '/datasets/Order_OrderDetails_JsonBlob')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDb_Orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlOpenQueryDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMovies",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonBlobFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "order_orderdetail.json",
							"type": "Expression"
						},
						"folderPath": "OrderDetails",
						"container": "staging"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order_OrderDetails_JsonBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "order_orderdetail.json",
						"folderPath": "OrderDetails",
						"container": "staging"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"OrderId": {
							"type": "integer"
						},
						"OrderDate": {
							"type": "string"
						},
						"FirstName": {
							"type": "string"
						},
						"LastName": {
							"type": "string"
						},
						"Address": {
							"type": "string"
						},
						"City": {
							"type": "string"
						},
						"State": {
							"type": "string"
						},
						"PostalCode": {
							"type": "string"
						},
						"Country": {
							"type": "string"
						},
						"Phone": {
							"type": "string"
						},
						"SMSOptIn": {
							"type": "boolean"
						},
						"Email": {
							"type": "string"
						},
						"Total": {
							"type": "number"
						},
						"PaymentTransactionId": {
							"type": "string"
						},
						"HasBeenShipped": {
							"type": "boolean"
						},
						"OrderDetails": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"OrderDetailId": {
										"type": "integer"
									},
									"ProductId": {
										"type": "integer"
									},
									"Quantity": {
										"type": "integer"
									},
									"UnitPrice": {
										"type": "number"
									},
									"Email": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb_Orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TargetCosmosDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "Order"
				}
			},
			"dependsOn": []
		}
	]
}